{% extends 'base.html.twig' %}

{% block title %}Statistiques de {{ utilisateur }}{% endblock %}

{% block body %}
<div class="container">
    <h1>Statistiques de {{ utilisateur }}</h1>

    <!-- SÃ©lecteur de mois -->
    <form method="get" action="{{ path('stats_user', {'utilisateur': utilisateur}) }}">
        <label for="mois">Mois :</label>
        <input type="month" id="mois" name="mois" value="{{ mois }}">
        <button type="submit">Filtrer</button>
        <div class="nav-buttons">
        <a href="{{ path('depenses_list') }}" class="back-button">Retour Ã  l'accueil</a>
        </div>

    </form>

    <h2>Salaire total : {{ salaireTotal|number_format(2, ',', ' ') }} â‚¬</h2>
    <h2>DÃ©penses totales : {{ totalDepenses|number_format(2, ',', ' ') }} â‚¬</h2>
    <h2>Ã‰pargne : {{ epargne|number_format(2, ',', ' ') }} â‚¬</h2>

    <canvas id="depensesChart" width="400" height="400"></canvas>
    <canvas id="revenuDepenseChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // ðŸŽ¨ DonnÃ©es dÃ©penses par typologie
    const depensesData = {
        labels: {{ depensesParTypo|map(d => d.type)|json_encode|raw }},
        datasets: [{
            label: 'DÃ©penses',
            data: {{ depensesParTypo|map(d => d.total)|json_encode|raw }},
        type: 'pie',
        data: depensesData,
    });

    // ðŸŽ¨ Revenu vs DÃ©penses
    const revenuDepenseData = {
        labels: ['Salaire', 'DÃ©penses'],
        datasets: [{
            label: 'Comparatif',
            data: [{{ salaireTotal }}, {{ totalDepenses }}],
            backgroundColor: ['#28a745', '#dc3545']
        }]
    };

    new Chart(document.getElementById('revenuDepenseChart'), {
        type: 'doughnut',
        data: revenuDepenseData,
    });
</script>
{% endblock %}
